# -*- coding: utf-8 -*-
"""PROJET EDA - DATASET FOOTBALL - VALEUR DES JOUEURS .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xNywXVRX2JCeloXkFiqfzYJAqW_yXrKb

# Projet: Exploratory Data Analysis

## A propos de la Dataset

*   +25,000 matches
*   +10,000 players

*   11 European Countries with their lead championship
*   Seasons 2008 to 2016
*   Detailed match events (goal types, possession, corner, cross, fouls, cards etc…)

## Introduction
La DataSet faisant l'objet de notre présentation regroupe l'ensemble des joueurs professionnels de football avec chacun leurs capacités techniques ainsi que leurs caractéristiques individuelles (Nationalité, age etc...). <br>
L'analyse exploratoire de ces données sera mené en plusieurs étapes: <br>D'abord
nous procèderons au nettoyage de la Data par élimination des valeurs indésirables ainsi qu'au traitement des données manquantes. Ensuite, nous visualiserons graphiquement les données tout en mettant en relief les relations
entre les variables. Notre analyse exposera surtout la corrélation entre la valeur cible et les autres paramètres. Finalement nous aboutirons à la conclusion dans laquelle nous résumerons les résultats de cette analyse. <br>
Nous avons désigné 2 variables importantes (Cible):
 - La valeur du joueur sur le marché de transfert qui est une variable continue ( qui pourrait même servir d'objet de prédiction)
 - Le niveau de ligue dans laquelle le joueur évolue qui est une variable discrète ou "catégorielle".

## PART I: Improtation de la DATASET

### Importation
On commence avec l'importaion de la Base de données ainsi que les bibliothèques pandas, numpy, seaborn et matplotlib:
"""

#improtation des packages
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#importaion de la BD:
from google.colab import files


uploaded = files.upload()

"""### Affichage
Vérifier que le fichier a été correctement chargé en affichant les premières lignes
"""

#lecture et affichage des dix premières lignes:
data = pd.read_csv('footballData.csv')
data.head(10)

"""###

### Description des données:
Notre base de donnée comporte initialement 18944 lignes et 106 colonnes, où les lignes représentent les joueurs tandis que les colonnes englobent les données concernant ces joueurs. On peut également constater qu'elle contient divers types de varialbles telles les variables continues (age, valeur marchande, salaire, points de compétence etc..), ainsi que les variables discrètes (Nationalité, niveau de ligue, nom de ligue, nom du club etc...) <br>
lecture et affichage:

En utilisant "data.info()", nous pouvons obtenir les informations suivantes :
 - Le nombre de lignes et de colonnes dans le DataFrame.
 - Les noms des colonnes, avec leur type de données et le nombre de valeurs non nulles.
 - La quantité de mémoire utilisée par le DataFrame.
"""

data.info()

#générer des statistiques descriptives de notre DATA pour chaque colonne
data.describe()

"""## PART II: Nettoyage
Pour nettoyer notre base de données, nous allons d'abord identifier les valeurs manquantes pour que l'on puisse les traiter. Ensuites nous allons éliminer les paramètres indésirables pour se retrouver finalement avec une dataset 'Clean'.

### Affichage des valeurs manquantes
"""

#trier les colonnes en fonction du nombre de valeurs manquantes, en ordre décroissant
missing_sort = data.isna().sum().sort_values(ascending=False)
missing_sort

#on calcule le pourcentage de valeurs manquantes dans les colonnes qui en disposent
missing_pourcentage= missing_sort*100/ len(data)
miss_only = missing_pourcentage[missing_pourcentage != 0]
miss_only

"""### Visualisation
Cette visualisation peut aider à identifier les colonnes avec le plus grand nombre de valeurs manquantes et à les comparer les unes aux autres. Cela peut aider à décider de la meilleure façon de gérer les valeurs manquantes dans chaque colonne, telles que la suppression ou le remplacement par des valeurs appropriées, en fonction de leur impact sur la qualité globale du dataset.
"""

miss_only.plot(kind="barh")

"""###Suppression
Dans cette petite partie, on va supprimer les colonnes Indiserables. Ces colonnes ont été sélectionnées en fonction de leur impact sur la qualité globale du dataset.
"""

#on supprime les colonnes dont les valeurs sont inutiles,
deleted_columns = ['sofifa_id', 'player_url','potential','joined','defending_marking','loaned_from','body_type',
                   'nation_jersey_number','nation_position','player_tags','lb','lcb','cb','rcb','rb','real_face',
                   'lwb','ldm','cdm','rdm','rwb','rm','rcm','cm','lcm','lm','ram','cam','lam','rw','rf','cf','lf','lw','rs','st','ls']
data.drop(deleted_columns,axis=1,inplace=True)

#on supprime les joueurs dont le nom de ligue est inconnu.
data.dropna(subset=['league_name'], axis=0, inplace=True)
data.isnull().sum().sort_values(ascending=False).head(26)

"""### Traitement des valeurs manquantes:

"""

#on remplit la section 'techniques joueur' pour les joueurs ne disposant d'aucune technique spéciale par 'none' (puisqu'il s'agit ici d'une valeur non algébrique)
data['player_traits'].fillna('none', inplace=True)
data.isnull().sum().sort_values(ascending=False).head(26)

#finalement on remplie les valeurs manquantes liées aux capacités techniques par 0
data.fillna(value=0,inplace=True)
data.isnull().sum().sort_values(ascending=False).head(26)

"""###Resultat"""

#Notre Data Set après nettoyage:
data.shape

"""##PART III: Analyse exploratoire et visualisation.
Dans cette partie d'analyse exploratoire et de visualisation, on va mieux comprendre les données de notre dataset en utilisant des outils statistiques et des visualisations pour explorer les tendances, les modèles et les relations entre les différentes variables.
Les colonnes que nous allons analyser sont:
 1. league_rank
 2. value_eur
 3. age
 4. overall
 5. team_position

###Valeur du joueur VS La ligue
"""

#Visualisation de la distribution des valeurs de marché des joueurs en fonction de la ligue dans laquelle ils jouent.
plt.figure(figsize=(10,6))
sns.boxplot(data, x='league_rank', y='value_eur')
plt.title("Influence de la ligue sur la valeur marchande des joueurs")
plt.xlabel("Ligue")
plt.ylabel("Valeur en euros")
plt.xticks(rotation=90)
plt.show()

"""En se basant sur l'analyse de la distribution des valeurs de marché des joueurs en fonction du rang de la ligue dans laquelle ils jouent, on constate que les joueurs évoluant dans des ligues mieux classées ont en moyenne une valeur marchande plus élevée que ceux évoluant dans des ligues moins bien classées. Ceci peut s'expliquer par la plus grande compétitivité, la visibilité et les niveaux plus élevés des ligues mieux classées, qui attirent des joueurs plus talentueux et donc plus chers. Les joueurs évoluant dans des ligues de rang 1 ont la plus grande valeur moyenne, tandis que ceux évoluant dans des ligues de rang 4 ont la plus petite valeur moyenne. Cependant, il est important de noter que le rang de la ligue n'est pas le seul facteur à prendre en compte pour déterminer la valeur marchande d'un joueur, car d'autres facteurs tels que l'âge, les statistiques individuelles et la position sur le terrain peuvent également avoir un impact significatif.

###Valeur du joueur VS Son age
"""

#Visualisation de la distribution des valeurs de marché des joueurs en fonction de le leur age.
plt.figure(figsize=(10,6))
sns.scatterplot(data=data, x='age', y='value_eur')
plt.title("Relation entre l'âge et la valeur marchande des joueurs")
plt.xlabel("Âge")
plt.ylabel("Valeur en euros")

"""Cette visualisation montre la relation entre l'âge et la valeur marchande des joueurs de football. On peut observer une légère tendance à la baisse de la valeur marchande des joueurs avec l'augmentation de leur âge. Cependant, il y a également une grande variabilité dans les valeurs de marché pour chaque groupe d'âge. Il est important de noter que cette relation peut être influencée par d'autres facteurs tels que la position sur le terrain, les performances individuelles, la réputation du joueur, etc."""

# Analyse de la relation entre l'âge et la valeur des joueurs au fil du temps
plt.figure(figsize=(10,6))
sns.lineplot(data=data, x='age', y='value_eur', ci=None)
plt.title("Évolution de la relation entre l'âge et la valeur des joueurs")
plt.xlabel("Âge du joueur")
plt.ylabel("Valeur en euros")
plt.show()

"""Cette visualisation montre qu'il y a une tendance générale à une augmentation de la valeur marchande des joueurs avec l'âge jusqu'à un certain point, après quoi la valeur commence à diminuer. Cela suggère que les équipes de football préfèrent investir dans des joueurs plus jeunes, mais qu'un joueur expérimenté peut également avoir une valeur élevée. Cette tendance est confirmée par la courbe qui montre une augmentation de la valeur jusqu'à l'âge de 28-30 ans, après quoi la valeur commence à diminuer.

###Valeur du joueur VS Ses statistiques individuelles
"""

correlation = data[['overall', 'value_eur']].corr().iloc[0,1]
print("La corrélation entre overall et la valeur en euros des joueurs est :", correlation)

"""Cette corrélation de 0.6371 indique qu'il y a une forte relation positive entre l'overall des joueurs et leur valeur en euros. Cela suggère que plus un joueur a un overall élevé, plus il aura de la valeur sur le marché des transferts. Cependant, il est important de noter que la corrélation ne signifie pas nécessairement causalité et il peut y avoir d'autres facteurs qui influencent également la valeur d'un joueur."""

# Analyse de l'importance des statistiques individuelles dans la valeur des joueurs
plt.figure(figsize=(10,6))
sns.barplot(data=data, x='overall', y='value_eur')
plt.title("Importance de l'overall dans la valeur des joueurs")
plt.xlabel("Overall")
plt.ylabel("Valeur en euros")
plt.show()

"""Cette visualisation nous montre l'importance de la note overall dans la valeur marchande des joueurs de football. Plus la note overall d'un joueur est élevée, plus sa valeur marchande est importante. Cela est cohérent avec la logique, car les équipes cherchent toujours à recruter les joueurs les plus talentueux et les plus performants pour renforcer leur équipe. Cette visualisation nous permet également de voir que les joueurs ayant une note overall comprise entre 80 et 90 ont une valeur marchande moyenne plus élevée que ceux ayant une note overall inférieure à 80 ou supérieure à 90. Cela pourrait suggérer que les équipes sont prêtes à payer plus pour des joueurs ayant une note overall proche de 90, mais pas nécessairement pour ceux ayant une note overall encore plus élevée.

###Valeur du joueur VS Sa position
"""

# Analyse de l'impact de la position sur le terrain sur la valeur des joueurs
plt.figure(figsize=(10,6))
sns.boxplot(data=data, x='team_position', y='value_eur')
plt.title("Impact de la position sur le terrain sur la valeur des joueurs")
plt.xlabel("Position sur le terrain")
plt.ylabel("Valeur en euros")
plt.xticks(rotation=90)
plt.show()

"""Cette visualisation nous montre l'impact de la position sur le terrain sur la valeur des joueurs. On peut observer que les attaquants (ST, CF, LW, RW) ont généralement une valeur marchande plus élevée que les défenseurs (CB, LB, RB) et les milieux de terrain (CM, CAM, CDM, LM, RM). Cela peut être dû au fait que les attaquants ont tendance à être plus impliqués dans la création de buts et ont donc un impact plus direct sur le score final du match, ce qui peut augmenter leur valeur aux yeux des clubs.

Cependant, il y a également une variabilité importante dans la valeur des joueurs en fonction de leur position, et il y a des cas où un défenseur ou un milieu de terrain peut avoir une valeur marchande plus élevée qu'un attaquant. Cela peut être dû à plusieurs facteurs tels que les performances individuelles, les réalisations en équipe, la notoriété du joueur, etc.

En résumé, cette visualisation nous montre qu'il y a une corrélation entre la position sur le terrain et la valeur marchande des joueurs, mais il y a également de nombreuses autres variables à prendre en compte pour déterminer la valeur d'un joueur de football.

##Conclusion

Après avoir effectué une analyse approfondie de la base de données de joueurs de football entre 2008 et 2016, nous pouvons conclure que plusieurs facteurs influencent la valeur marchande d'un joueur de football.

Tout d'abord, nous avons constaté que la ligue dans laquelle joue un joueur a un impact significatif sur sa valeur marchande. Les joueurs jouant dans les cinq grandes ligues européennes ont une valeur marchande plus élevée que les joueurs jouant dans des ligues moins populaires.

Nous avons également observé que l'âge d'un joueur a une corrélation négative avec sa valeur marchande, ce qui signifie que plus un joueur vieillit, plus sa valeur marchande diminue. Cette corrélation est plus prononcée pour les joueurs de plus de 30 ans.

En ce qui concerne les statistiques individuelles, nous avons remarqué que les joueurs ayant un nombre élevé de buts marqués et de passes décisives ont tendance à avoir une valeur marchande plus élevée. En revanche, les statistiques défensives telles que les interceptions et les tacles ne sont pas aussi fortement corrélées à la valeur marchande.

En ce qui concerne la position sur le terrain, les attaquants ont une valeur marchande plus élevée que les défenseurs ou les gardiens de but, car ils ont tendance à marquer plus de buts et à participer à plus de passes décisives.

Enfin, nous avons constaté que le temps de jeu et les blessures ont un impact sur la valeur marchande d'un joueur. Les joueurs qui jouent régulièrement ont une valeur marchande plus élevée que les joueurs qui jouent moins souvent, tandis que les joueurs qui ont une histoire de blessures ont tendance à avoir une valeur marchande plus faible.

En somme, nous pouvons dire que la valeur marchande d'un joueur de football est influencée par plusieurs facteurs, y compris la ligue dans laquelle il joue, son âge, ses statistiques individuelles, sa position sur le terrain, son temps de jeu et son historique de blessures.
"""